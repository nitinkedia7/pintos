/* Log Template
Log #
Start Date & Time: YYYY MM DD HH:MM
Duration:          HH MM
End Date & Time  : YYYY MM DD HH:MM 
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1.
    2.

File(s) involved with relevant functions:
    1. filename: function name

Estimated Lines of Code Added/Modified:
*/
-----------------------------------------------------------------------------------
Log 9
Start Date & Time: 2018 09 03 21:30
Duration:          01 30
End Date & Time  : 2018 08 31 23:00
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Comment the code .
Session Highlights:
    1. Commented the modified code section to provide better understanding.
File(s) involved with relevant functions:
   Almost all files and functions previously modified or added during the completion of Task 2.

Estimated Lines of Code Added/Modified: -
-----------------------------------------------------------------------------------
Log 8
Start Date & Time: 2018 09 01 17:30
Duration:          03 30
End Date & Time  : 2018 08 31 21:00
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Implement lock priority for each lock.
    2. Implement priority donation for threads considering all possibilities.
Session Highlights:
    1. Successfully implemented lock priority.
    2. Successfully implemented priority donation for threads involving lock and condvar.
    3. Successfully compiled pintos and 9/27 test cases failed initially
    4. Successfully implemented priority donation for semaphores.
    5. Successfully compiled pintos and 7/27 test cases failed.

File(s) involved with relevant functions:
   1.thread.h : struct thread 
   2.thread.c : init_thread,thread_get_priority
   2.synch.c : lock_release,lock_acquire,priority_donate

Estimated Lines of Code Added/Modified: 35
-----------------------------------------------------------------------------------
Log 7
Start Date & Time: 2018 08 31 17:30
Duration:          05 30
End Date & Time  : 2018 08 31 23:00
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Implement acquired_lock list for each thread storing the locks it has acquired_lock.
    2. Implement seeking link for each thread to the lock it is seeking to acquire.
    3. Implement the addtion and deletion of the lock from its respective holder's accquired_locks list.
    4. Implement priority donation for threads 
Session Highlights:
    1. Successfully implemented the acquired_lock list attribute in each struct thread along with the 
        its updation on addition of new locks and deletion of acquired ones.
    2. Successfully implemented seeking link for each thread pointing to the lock it is seeking.
    3. Successfully complied pintos and 14/27 test cases failed in make_check till current state.
    4. Encountered KERNEL_panic condition on implementing priority donation in several cases while applying the
        algorithm for priority donation.

File(s) involved with relevant functions:
   1.thread.h : struct thread 
   2.thread.c : init_thread
   2.synch.c : lock_init,lock_release,lock_acquire,before_lock

Estimated Lines of Code Added/Modified: 25
-----------------------------------------------------------------------------------
Log 6
Start Date & Time: 2018 08 29 20:30
Duration:          05 30
End Date & Time  : 2018 08 30 02:00
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Implement  thread_set_priority() and thread_get_priority  as per requirement in PintDoc section 2.2.3
    2. Modify sema_up function to release the highest priority thread first.
    3. Modify Conditions function to prefer the highest priority thread
Session Highlights:
    1. Successfully complied pintos and 14/27 failed in make_check.
    2. Successfully modified the respective function mentioned in the objectives as per requirement.
     

File(s) involved with relevant functions:
   1.thread.c : thread_set_priority,thread_get_priority.
   2.synch.c : sema_up,cond_wait 

Estimated Lines of Code Added/Modified: 15
-----------------------------------------------------------------------------------
Log 5
Start Date & Time: 2018 08 16 12:00
Duration:          02 00
End Date & Time  : 2018 08 15 02:00
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Implement lock functionality allowing only one thread to access 
    the sleeper_list at a time.
    1. Comment the code to provide a better understanding.
Session Highlights:
    1. Successfully complied pintos and 19/27 failed in make_check.
    2. Successfully implemented the lock functionality on sleeper_list
     

File(s) involved with relevant functions:
   1.thread.h : acquire_sleeper, release_sleeper.
   2.Almost all functions involved in previous log, as comments were added
    on each function and variable introduced or modified.
            
Estimated Lines of Code Added/Modified: 25
-----------------------------------------------------------------------------------
Log 4
Start Date & Time: 2018 08 14 20:36
Duration:          05 54
End Date & Time  : 2018 08 15 02:30
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Debug the functions implemented in previous session.
    1. Complete Subtask 2 & 3.
Session Highlights:
    1. Successfully complied pintos and 19/27 failed in make_check.
    2. struct sleeper was replaced with struct thread, augmented with wakeup_at
    3. Insert thread to appropriate to ready & sleeper list 

File(s) involved with relevant functions:
    Almost all functions involved in previous log, as struct had to be replaced.
    thread.h:thread_wake;
            
Estimated Lines of Code Added/Modified: 80
--------------------------------------------------------------------------------------
Log 3
Start Date & Time: 2018 08 12 12:00
Duration:          03 47
End Date & Time  : 2018 08 12 15:47
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Start implementing T01
Session Highlights:
    1. Completed Subtask 1 by completing set_priority_temporarily_up()
    2. Understood (doubly) Linked list implementation in list.h/list.c through comments.
    3. Partially implemented sleeper_list, insert, before but not compiled.

File(s) involved with relevant functions:
    1. timer.c/timer.h    thread_block_till(wakeup_at,before);
                            thread_set_next_wakeup();
                            thread_priority_restore(current_priority);
                            before();
    2. list.h/list.c

Estimated Lines of Code Added/Modified: 50
----------------------------------------------------------------------------------------
Log 1
Start Date & Time: 2018 08 08 14:00
Duration:          01 55
End Date & Time  : 2018 08 07 15:55 
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    Complete setup of PintOS.
    Read "Overview of Threads and User Programs within PintOS"
    and T01 problem statement "PintOS-T01: Timer Alarms without Busy Waits"
Session Highlights: 
    Absolute path had to used in place of $HOME in .bash_profile
    Mutual discussion on working of threads and the context where we start implementation. 
File(s) involved with relevant functions: None

Estimated Lines of Code Added/Modified: None

------------------------------------------------------------------------------------------
Log 0
Start Date & Time: 2018 08 07 14:00
Duration:          02 30
End Date & Time  : 2018 08 07  16:30
Team Member(s) Present: Abhinav Mishra, Nitin Kedia, Sparsh Bansal, Vivek Raj

Objectives:
    1. Setup PinOS and Boschs Emulator using Readme
    2. Setup CVS 
Session Highlights:
    1. Despite stringently following readme instructions, we were unable to make check.
    2. CVS setup attempts which can be found in folder "junk". Tutorial at
        "http://www-mrsrl.stanford.edu/~brian/cvstutorial/" came to rescue. 

File(s) involved with relevant functions: pintos, cvs folder
Estimated Lines of Code Added/Modified: None
